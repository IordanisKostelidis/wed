FROM debian:buster as builder
LABEL maintainer="Iordanis Kostelidis <ikostelidis@datascouting.com>"

ARG NODE_VERSION=10.x
ARG SAXON9HE_SRC_PATH=./saxon/saxon9he.jar
ARG SAXON_SRC_PATH=./saxon/saxon.sh
ARG ROMA_5_SRC_PATH=./roma/roma-5.0.0.zip
ARG ROME_5_TARGET_PATH=./Roma-5.0.0
ARG TEI_XSL_7_SRC_PATH=./tei/tei-xsl-7.48.0.zip

# Update package catalogue and install packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-utils \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates \
                                                      curl \
                                                      git \
                                                      wget \
                                                      zip unzip \
                                                      libxml2-utils \
                                                      trang \
                                                      dos2unix \
 && curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y chromium

# Install Saxonica's Saxon HE
WORKDIR /tmp
COPY /saxon /tmp/saxon
RUN cp ${SAXON9HE_SRC_PATH} /usr/bin/saxon9he.jar \
 && cp ${SAXON_SRC_PATH} /usr/bin/saxon \
 && chmod +x /usr/bin/saxon \
 && dos2unix /usr/bin/saxon

# Install TEI Roma2
WORKDIR /tmp
COPY ${ROMA_5_SRC_PATH} /tmp/roma.zip
RUN unzip roma.zip \
 && cp ${ROME_5_TARGET_PATH}/roma2.sh /usr/bin/roma2 \
 && chmod +x /usr/bin/roma2 \
 && dos2unix /usr/bin/roma2 \
 && rm /tmp/roma.zip \
 && rm -fr ${ROME_5_TARGET_PATH}

# Install TEI Stylesheets
WORKDIR /tmp
COPY ${TEI_XSL_7_SRC_PATH} /tmp/tei-xsl.zip
RUN unzip tei-xsl.zip -d /usr/share \
 && rm ./tei-xsl.zip \
 && rm -fr ./doc

# Install wed utils
WORKDIR /tmp
COPY ./wedUtils /tmp/wedUtils
RUN mv ./wedUtils/buildWed.sh ./wedUtils/buildWed \
 && mv ./wedUtils/cleanWed.sh ./wedUtils/cleanWed \
 && mv ./wedUtils/deployWed.sh ./wedUtils/deployWed \
 && mv ./wedUtils/buildAndDeployWed.sh ./wedUtils/buildAndDeployWed \
 && cp -r ./wedUtils/* /usr/bin/ \
 && chmod +x /usr/bin/buildWed \
 && chmod +x /usr/bin/cleanWed \
 && chmod +x /usr/bin/deployWed \
 && chmod +x /usr/bin/buildAndDeployWed \
 && dos2unix /usr/bin/buildWed \
 && dos2unix /usr/bin/cleanWed \
 && dos2unix /usr/bin/deployWed \
 && dos2unix /usr/bin/buildAndDeployWed

## Dev Block
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor \
                                                      apache2 \
 && a2enmod rewrite headers

# Get arguments for user creation and password changes
ARG SERVER_USER_UID=1000
ARG SERVER_USER_GID=1000
ARG SERVER_USER_PASSWORD=secret

# Add user and set password
RUN groupadd -r user -g "${SERVER_USER_GID}" \
 && useradd -ms /bin/bash user -u "${SERVER_USER_UID}" -g "${SERVER_USER_GID}" \
 && echo user:${SERVER_USER_PASSWORD} | chpasswd

## Change Apache2 user
RUN sed -i -e"s/^export\s*APACHE_RUN_USER=www-data/export APACHE_RUN_USER=user/" /etc/apache2/envvars \
 && sed -i -e"s/^export\s*APACHE_RUN_GROUP=www-data/export APACHE_RUN_GROUP=user/" /etc/apache2/envvars

RUN echo 'ServerName localhost' >> /etc/apache2/apache2.conf

# Enable apache2
COPY ./config/vhosts /etc/apache2/sites-available
RUN cd /etc/apache2/sites-available \
 && a2ensite * \
 && a2dissite default-ssl 000-default

# Setup supervisor to run child processes.
COPY ./config/supervisor /etc/supervisor/conf.d
RUN chown root:root /etc/supervisor/conf.d/* && chmod 644 /etc/supervisor/conf.d/*

WORKDIR /home/user

EXPOSE 80

CMD ["/usr/bin/supervisord", "-n"]